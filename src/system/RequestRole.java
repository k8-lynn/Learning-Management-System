/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package system;

import Design.CurvedScrollBarUI;
import Design.CustomCellRenderer;
import Design.CustomHeaderRenderer;
import Design.CustomTableCellRenderer;
import Design.StatusCellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author nisha
 */
public class RequestRole extends javax.swing.JPanel {

    /**
     * Creates new form LecturerEditDelete
     */
    String KeyId;
    String name;
    String intakeCode;
    String Assess;
    String approve;
    String role;
    DefaultTableModel model;
    private List<String[]> assignedStud;
    LoginPage login = new LoginPage();
    
    
    public RequestRole() {
        initComponents();
        
        // Set custom scroll bar UI for jScrollPane2
        jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.getVerticalScrollBar().setUI(new CurvedScrollBarUI());
        jScrollPane2.getHorizontalScrollBar().setUI(new CurvedScrollBarUI());


        jTable1.getTableHeader().setDefaultRenderer(new CustomHeaderRenderer());
        jTable1.setDefaultRenderer(Object.class, new CustomCellRenderer());

        // Set the row height and curve radius
        jTable1.setRowHeight(20); // Set row height
        jTable1.setIntercellSpacing(new Dimension(0, 0)); // Remove cell spacing
        jTable1.setShowGrid(false); // Hide grid lines
        jTable1.setShowHorizontalLines(true);

       
        setTableHeaderHeight(jTable1, 30); // Set header height
        


        // Make even rows a different color
        jTable1.setOpaque(false); // Make table transparent
        jTable1.setBackground(new Color(240, 240, 240)); // Set background color for odd rows

       
        // Initialize student & lecturer array
        assignedStud = new ArrayList<>();

        // Load students from file
        System.out.println("haii");
        loadStudentsFromFile("assign_student_list.txt");

        System.out.println("deeee");
        // Populate combo box with Key IDs
        populateComboBoxes();


        // Handle combo box selection
        cboIntake.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                 populateAssessmentComboBox();
            }
        });
        
        System.out.println("ggggg");
        //Load data in table
        populateTable();
        System.out.println("ggyyyy");
        // Apply custom cell renderer to each column
        CustomTableCellRenderer renderer = new CustomTableCellRenderer();
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
        System.out.println("grrrrrr");
        // if table have value, execute this function
        System.out.println(jTable1.getRowCount());
//        if(jTable1.getRowCount() > 0 ){
//
//            StatusCellRenderer renderer2 = new StatusCellRenderer();
//            for (int i = 0; i < jTable1.getColumnCount(); i++) {
//                jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer2);
//            }
//        }
        
        String input = login.getUsername();
        String[] parts = input.split("-");
        if (parts.length > 1) {
            KeyId = parts[1].trim();
            name = parts[0].trim();
        }

        

        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainRequestRole = new javax.swing.JLayeredPane();
        pnlRequestRole = new javax.swing.JPanel();
        lblRequestRoleTitle = new javax.swing.JLabel();
        lblRequestInfo = new javax.swing.JLabel();
        pnlTableCourse = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblApplicationStatusTable = new javax.swing.JLabel();
        btnRequestRole = new javax.swing.JButton();
        lblIntake = new javax.swing.JLabel();
        lblAssess = new javax.swing.JLabel();
        cboRole = new javax.swing.JComboBox<>();
        cboAssess = new javax.swing.JComboBox<>();
        cboIntake = new javax.swing.JComboBox<>();
        lblRole = new javax.swing.JLabel();
        lblBox = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMainRequestRole.setPreferredSize(new java.awt.Dimension(1075, 650));
        pnlMainRequestRole.setLayout(new java.awt.CardLayout());

        pnlRequestRole.setBackground(new java.awt.Color(255, 255, 255));
        pnlRequestRole.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRequestRoleTitle.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblRequestRoleTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblRequestRoleTitle.setText("Request Role");
        pnlRequestRole.add(lblRequestRoleTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 35, -1, -1));

        lblRequestInfo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblRequestInfo.setForeground(new java.awt.Color(29, 62, 105));
        lblRequestInfo.setText("Request ");
        pnlRequestRole.add(lblRequestInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 125, -1, -1));

        pnlTableCourse.setBackground(new java.awt.Color(255, 255, 255));
        pnlTableCourse.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        pnlTableCourse.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key Id", "Name", "Intake code", "Assessment", "Role", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(0);
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setOpaque(false);
        jTable1.setSelectionBackground(new java.awt.Color(102, 255, 51));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        pnlTableCourse.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 50, 530, 450));

        lblApplicationStatusTable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblApplicationStatusTable.setForeground(new java.awt.Color(29, 62, 105));
        lblApplicationStatusTable.setText("Application Status Table");
        pnlTableCourse.add(lblApplicationStatusTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        pnlRequestRole.add(pnlTableCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 550, 510));

        btnRequestRole.setBackground(new java.awt.Color(0, 153, 255));
        btnRequestRole.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRequestRole.setForeground(new java.awt.Color(255, 255, 255));
        btnRequestRole.setText("Request");
        btnRequestRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestRoleActionPerformed(evt);
            }
        });
        pnlRequestRole.add(btnRequestRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 150, -1));

        lblIntake.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblIntake.setForeground(new java.awt.Color(0, 0, 0));
        lblIntake.setText("Intake code : ");
        pnlRequestRole.add(lblIntake, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        lblAssess.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAssess.setForeground(new java.awt.Color(0, 0, 0));
        lblAssess.setText("Assessment : ");
        pnlRequestRole.add(lblAssess, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        cboRole.setBackground(new java.awt.Color(204, 204, 204));
        cboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Supervisor", "Second Marker" }));
        cboRole.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        cboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboRoleActionPerformed(evt);
            }
        });
        pnlRequestRole.add(cboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 230, -1));

        cboAssess.setBackground(new java.awt.Color(204, 204, 204));
        cboAssess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cboAssess.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        cboAssess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAssessActionPerformed(evt);
            }
        });
        pnlRequestRole.add(cboAssess, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 230, -1));

        cboIntake.setBackground(new java.awt.Color(204, 204, 204));
        cboIntake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cboIntake.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        cboIntake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboIntakeActionPerformed(evt);
            }
        });
        pnlRequestRole.add(cboIntake, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 175, 230, -1));

        lblRole.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRole.setForeground(new java.awt.Color(0, 0, 0));
        lblRole.setText("Role : ");
        pnlRequestRole.add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        lblBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/system/img_icon/TransparentBox2.png"))); // NOI18N
        lblBox.setPreferredSize(new java.awt.Dimension(1074, 650));
        pnlRequestRole.add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlMainRequestRole.add(pnlRequestRole, "card2");

        add(pnlMainRequestRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered

    private void btnRequestRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestRoleActionPerformed
        
        intakeCode = cboIntake.getSelectedItem().toString();
        Assess = cboAssess.getSelectedItem().toString();
        role = cboRole.getSelectedItem().toString();
        approve = "Pending";
        boolean notCompletedForm = false;
        
        if (KeyId.isEmpty() || name.isEmpty() ||  intakeCode.isEmpty() ||  Assess.isEmpty()||  role.isEmpty()) {
            notCompletedForm = true;
            JOptionPane.showMessageDialog(this, "Please complete the form");
        }


        //!duplicateFound && 
        if (!notCompletedForm) {
            
              try {
                FileWriter writer = new FileWriter("markerRequest.txt", true);
                writer.write(KeyId + "," + name + "," + intakeCode + "," + Assess + "," + role + "," + approve );
                writer.write(System.getProperty("line.separator"));

                writer.close();
                JOptionPane.showMessageDialog(null, "Requested successfully");
                populateTable();
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error in request: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Error");
        }
        

    }//GEN-LAST:event_btnRequestRoleActionPerformed

    private void cboAssessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAssessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboAssessActionPerformed

    private void cboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboRoleActionPerformed

    private void cboIntakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboIntakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboIntakeActionPerformed

    // Method to set table header height
    private void setTableHeaderHeight(JTable table, int height) {
        JTableHeader header = table.getTableHeader();
        TableColumnModel columnModel = header.getColumnModel();
        for (int i = 0; i < columnModel.getColumnCount(); i++) {
            TableColumn column = columnModel.getColumn(i);
            column.setHeaderRenderer(new Design.HeaderRenderer(height));
            column.setPreferredWidth(130); // Set preferred column width
        }
        header.setPreferredSize(new Dimension(header.getWidth(), height));
    }


    private void loadStudentsFromFile(String filePath) {
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length >= 3) { // Ensure there are at least 3 elements (KeyId, name, intakeCode)
                    assignedStud.add(data);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    // Populate combo boxes with data
    private void populateComboBoxes() {
        cboIntake.removeAllItems(); // Clear existing items
        cboIntake.addItem("Select");
        for (String[] intake : assignedStud) {
            cboIntake.addItem(intake[2]); // Intake code in third column
        }

    }
    private void populateAssessmentComboBox() {
        cboAssess.removeAllItems();
        String selectedIntake = (String) cboIntake.getSelectedItem();
        if (selectedIntake != null) {
            Set<String> assessments = new HashSet<>();
            for (String[] record : assignedStud) {
                if (record[2].equals(selectedIntake)) {
                    assessments.add(record[3]);
                }
            }
            for (String assessment : assessments) {
                cboAssess.addItem(assessment);
            }
        }
    }
    

  
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows

        File file = new File("markerRequest.txt");
        try {
            if (!file.exists()) {
                file.createNewFile();
            }
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                model.addRow(data);
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error reading data from file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRequestRole;
    private javax.swing.JComboBox<String> cboAssess;
    private javax.swing.JComboBox<String> cboIntake;
    private javax.swing.JComboBox<String> cboRole;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblApplicationStatusTable;
    private javax.swing.JLabel lblAssess;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblIntake;
    private javax.swing.JLabel lblRequestInfo;
    private javax.swing.JLabel lblRequestRoleTitle;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLayeredPane pnlMainRequestRole;
    private javax.swing.JPanel pnlRequestRole;
    private javax.swing.JPanel pnlTableCourse;
    // End of variables declaration//GEN-END:variables
}
