/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package system;

import Design.CurvedScrollBarUI;
import Design.CustomCellRenderer;
import Design.CustomHeaderRenderer;
import Design.CustomTableCellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author nisha
 */
public class RequestSubmissonLecturer extends javax.swing.JPanel {

    /**
     * Creates new form StudentRegistrationList
     */
    DefaultTableModel model;

    
    public RequestSubmissonLecturer() {
        initComponents();
          // Set custom scroll bar UI for jScrollPane2
        jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.getVerticalScrollBar().setUI(new CurvedScrollBarUI());
        jScrollPane2.getHorizontalScrollBar().setUI(new CurvedScrollBarUI());

        jTable1.getTableHeader().setDefaultRenderer(new CustomHeaderRenderer());
        jTable1.setDefaultRenderer(Object.class, new CustomCellRenderer());

        // Set the row height and curve radius
        jTable1.setRowHeight(20); // Set row height
        jTable1.setIntercellSpacing(new Dimension(0, 0)); // Remove cell spacing
        jTable1.setShowGrid(false); // Hide grid lines
        jTable1.setShowHorizontalLines(true);
       
        setTableHeaderHeight(jTable1, 30); // Set header height

        // Make even rows a different color
        jTable1.setOpaque(false); // Make table transparent
        jTable1.setBackground(new Color(240, 240, 240)); // Set background color for odd rows
        
        txtKeyId.setVisible(false);
        

        
       
        // Populate table
        populateTable();
        
        // Apply custom cell renderer to each column
        CustomTableCellRenderer renderer = new CustomTableCellRenderer();
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
        // Set text file visible to false, this textfields purpose only for coding purpose.
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainReqSeb = new javax.swing.JLayeredPane();
        pnlReqSub = new javax.swing.JPanel();
        lblRoleReqTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnReject = new javax.swing.JButton();
        btnAccpet = new javax.swing.JButton();
        txtKeyId = new javax.swing.JTextField();
        lblBox = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1075, 650));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMainReqSeb.setPreferredSize(new java.awt.Dimension(1075, 650));
        pnlMainReqSeb.setLayout(new java.awt.CardLayout());

        pnlReqSub.setBackground(new java.awt.Color(255, 255, 255));
        pnlReqSub.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRoleReqTitle.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblRoleReqTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblRoleReqTitle.setText("Requested Role");
        pnlReqSub.add(lblRoleReqTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 35, -1, -1));

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane2.setForeground(new java.awt.Color(221, 218, 218));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(244, 244, 244), 1, true));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key ID", "Name", "Intake Code", "Assessment", "Role", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setOpaque(false);
        jTable1.setSelectionBackground(new java.awt.Color(102, 255, 51));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        pnlReqSub.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 1030, 380));

        lblSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(51, 153, 255));
        lblSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/system/img_icon/searchIcon.png"))); // NOI18N
        lblSearch.setText(":");
        pnlReqSub.add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 90, 40, 30));

        txtSearch.setBackground(new java.awt.Color(244, 244, 244));
        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        pnlReqSub.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 90, 230, 25));

        btnReject.setBackground(new java.awt.Color(255, 0, 0));
        btnReject.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReject.setForeground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        pnlReqSub.add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 570, 140, 30));

        btnAccpet.setBackground(new java.awt.Color(102, 255, 0));
        btnAccpet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAccpet.setForeground(new java.awt.Color(255, 255, 255));
        btnAccpet.setText("Accept");
        btnAccpet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccpetActionPerformed(evt);
            }
        });
        pnlReqSub.add(btnAccpet, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 570, 140, -1));

        txtKeyId.setBackground(new java.awt.Color(255, 51, 51));
        txtKeyId.setText("id");
        pnlReqSub.add(txtKeyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 200, -1));

        lblBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/system/img_icon/TransparentBox2.png"))); // NOI18N
        pnlReqSub.add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlMainReqSeb.add(pnlReqSub, "card2");

        add(pnlMainReqSeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

       // Method to set table header height
    private void setTableHeaderHeight(JTable table, int height) {
        JTableHeader header = table.getTableHeader();
        TableColumnModel columnModel = header.getColumnModel();
        for (int i = 0; i < columnModel.getColumnCount(); i++) {
            TableColumn column = columnModel.getColumn(i);
            column.setHeaderRenderer(new Design.HeaderRenderer(height));
            column.setPreferredWidth(130); // Set preferred column width
        }
        header.setPreferredSize(new Dimension(header.getWidth(), height));
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();


        // Set the text of txtId with the integer ID converted to a string
        txtKeyId.setText(model.getValueAt(row, 0).toString());


        if(txtSearch.getText()!=""){
            // Get the sorted row index in the model
            int sortedRowIndex = jTable1.convertRowIndexToModel(row);
            String idSort = model.getValueAt(sortedRowIndex, 0).toString();

            // Set the text of txtId with the integer ID converted to a string
            txtKeyId.setText(idSort);

        }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        txtSearch.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.LIGHT_GRAY)); // Add border
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); // Get the table model
        // Create a new row sorter for the table model
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(model); 
        jTable1.setRowSorter(obj); // Set the row sorter for the table
        // Apply a row filter based on the text in the search field
        obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText())); 
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        txtSearch.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE)); // Add border
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnAccpetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccpetActionPerformed
        
        String keyIdToEdit = txtKeyId.getText();

        try {
            // Read all lines from the file
            List<String> lines = Files.readAllLines(Paths.get("markerRequest.txt"));

            // List to store the updated lines
            List<String> updatedLines = new ArrayList<>();

            for (String line : lines) {
                // Split the line into columns
                String[] columns = line.split(",");

                // Check if this is the line we need to edit
                if (columns[0].equals(keyIdToEdit)) {
                    // Update the specific column
                    columns[5] = "Accept";
                    
                }

                // Join the columns back into a single line
                updatedLines.add(String.join(",", columns));
            }

            // Write the updated lines back to the file
            Files.write(Paths.get("markerRequest.txt"), updatedLines);

            JOptionPane.showMessageDialog(null, "File updated successfully.");
            populateTable(); // Reload the table to reflect changes

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error updating file: " + e.getMessage(), 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
   
    }//GEN-LAST:event_btnAccpetActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        String keyIdToEdit = txtKeyId.getText();

       //Add data in "assign_student_list.txt" file
        try {
            // Read all lines from the file
            List<String> lines = Files.readAllLines(Paths.get("markerRequest.txt"));

            // List to store the updated lines
            List<String> updatedLines = new ArrayList<>();

            for (String line : lines) {
                // Split the line into columns
                String[] columns = line.split(",");

                // Check if this is the line we need to edit
                if (columns[0].equals(keyIdToEdit)) {
                    // Update the specific column
                    columns[5] = "Reject";
                    
                }

                // Join the columns back into a single line
                updatedLines.add(String.join(",", columns));
            }

            // Write the updated lines back to the file
            Files.write(Paths.get("markerRequest.txt"), updatedLines);

            JOptionPane.showMessageDialog(null, "File updated successfully.");
            populateTable(); // Reload the table to reflect changes

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error updating file: " + 
                    e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRejectActionPerformed


    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows

        File file = new File("markerRequest.txt");
        try {
            if (!file.exists()) {
                file.createNewFile();
            }
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                model.addRow(data);
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error reading data from file: " 
                    + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    

   
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccpet;
    private javax.swing.JButton btnReject;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblRoleReqTitle;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLayeredPane pnlMainReqSeb;
    private javax.swing.JPanel pnlReqSub;
    private javax.swing.JTextField txtKeyId;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
