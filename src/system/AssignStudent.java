/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package system;

import Design.CurvedScrollBarUI;
import Design.CustomCellRenderer;
import Design.CustomHeaderRenderer;
import Design.CustomTableCellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author nisha
 */
public class AssignStudent extends javax.swing.JPanel {

    /**
     * Creates new form LecturerEditDelete
     */
    //Initialize variables
    String KeyId;
    String name;
    String intakeCode;
    String Assess;
    String date;
    String time;
    String supervisorName;
    String secondMName;
    String supervisorId;
    String secondMId;
    String dateL;
    String timeL;
    String submissionFile;
    DefaultTableModel model;
    private ArrayList<Student> students;
    
    public AssignStudent() {
        initComponents();
        
        //Design Table
        // Set custom scroll bar UI for jScrollPane2
        jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.getVerticalScrollBar().setUI(new CurvedScrollBarUI());
        jScrollPane2.getHorizontalScrollBar().setUI(new CurvedScrollBarUI());

        jTable1.getTableHeader().setDefaultRenderer(new CustomHeaderRenderer());
        jTable1.setDefaultRenderer(Object.class, new CustomCellRenderer());

        // Set the row height and curve radius
        jTable1.setRowHeight(20); // Set row height
        jTable1.setIntercellSpacing(new Dimension(0, 0)); // Remove cell spacing
        jTable1.setShowGrid(false); // Hide grid lines
        jTable1.setShowHorizontalLines(true);
       
        setTableHeaderHeight(jTable1, 30); // Set header height

        // Make even rows a different color
        jTable1.setOpaque(false); // Make table transparent
        jTable1.setBackground(new Color(240, 240, 240)); // Set background color for odd rows
        

        

        // Initialize student array
        students = new ArrayList<>();
        
        //Call function
         // Load existing data
        loadData();
       
        // Populate table
        populateTable();
        
        // Apply custom cell renderer to each column
        CustomTableCellRenderer renderer = new CustomTableCellRenderer();
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
        
        //For time combo box
        // Add hours and minutes to hour
        for (int i = 0; i < 24; i++) {
            cboHours.addItem(String.format("%02d", i));
        }
        
        // Add minutes to minute
        for (int i = 0; i < 60; i++) {
            cboMinute.addItem(String.format("%02d", i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainAssignStud = new javax.swing.JLayeredPane();
        pnlAssignStud = new javax.swing.JPanel();
        lblLAssignSTitle = new javax.swing.JLabel();
        lblAssignInfo = new javax.swing.JLabel();
        pnlTableCourse = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblSListTable = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblKeyId = new javax.swing.JLabel();
        txtKeyId = new javax.swing.JTextField();
        lblIntake = new javax.swing.JLabel();
        txtIntake = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAssess = new javax.swing.JLabel();
        cboMinute = new javax.swing.JComboBox<>();
        cboHours = new javax.swing.JComboBox<>();
        cboAssess = new javax.swing.JComboBox<>();
        lblDuedate = new javax.swing.JLabel();
        dataC = new com.toedter.calendar.JDateChooser();
        lblHour = new javax.swing.JLabel();
        lblMinute = new javax.swing.JLabel();
        lblBox = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMainAssignStud.setPreferredSize(new java.awt.Dimension(1075, 650));
        pnlMainAssignStud.setLayout(new java.awt.CardLayout());

        pnlAssignStud.setBackground(new java.awt.Color(255, 255, 255));
        pnlAssignStud.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLAssignSTitle.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblLAssignSTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblLAssignSTitle.setText("Assign Student Assessment");
        pnlAssignStud.add(lblLAssignSTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 35, -1, -1));

        lblAssignInfo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblAssignInfo.setForeground(new java.awt.Color(29, 62, 105));
        lblAssignInfo.setText("Assign Student");
        pnlAssignStud.add(lblAssignInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 125, -1, -1));

        pnlTableCourse.setBackground(new java.awt.Color(255, 255, 255));
        pnlTableCourse.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        pnlTableCourse.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key ID", "Name", "Intake code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setOpaque(false);
        jTable1.setSelectionBackground(new java.awt.Color(102, 255, 51));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        pnlTableCourse.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 60, 490, 390));

        lblSListTable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblSListTable.setForeground(new java.awt.Color(29, 62, 105));
        lblSListTable.setText("Student List Table");
        pnlTableCourse.add(lblSListTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        txtSearch.setBackground(new java.awt.Color(244, 244, 244));
        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        pnlTableCourse.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 230, 25));

        lblSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(51, 153, 255));
        lblSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/system/img_icon/searchIcon.png"))); // NOI18N
        lblSearch.setText(":");
        pnlTableCourse.add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 40, 30));

        pnlAssignStud.add(pnlTableCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 110, 510, 470));

        btnAssign.setBackground(new java.awt.Color(51, 255, 51));
        btnAssign.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        pnlAssignStud.add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 170, -1));

        btnClear.setBackground(new java.awt.Color(51, 51, 51));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlAssignStud.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));

        lblKeyId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblKeyId.setForeground(new java.awt.Color(0, 0, 0));
        lblKeyId.setText("Key ID : ");
        pnlAssignStud.add(lblKeyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 50, -1));

        txtKeyId.setBackground(new java.awt.Color(221, 218, 218));
        pnlAssignStud.add(txtKeyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 175, 230, -1));

        lblIntake.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblIntake.setForeground(new java.awt.Color(0, 0, 0));
        lblIntake.setText("Intake code : ");
        pnlAssignStud.add(lblIntake, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        txtIntake.setBackground(new java.awt.Color(221, 218, 218));
        txtIntake.setForeground(new java.awt.Color(0, 0, 0));
        txtIntake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIntakeActionPerformed(evt);
            }
        });
        pnlAssignStud.add(txtIntake, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 265, 230, -1));

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblName.setForeground(new java.awt.Color(0, 0, 0));
        lblName.setText("Name : ");
        pnlAssignStud.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 225, -1, -1));

        txtName.setBackground(new java.awt.Color(221, 218, 218));
        txtName.setForeground(new java.awt.Color(0, 0, 0));
        pnlAssignStud.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 230, -1));

        lblAssess.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAssess.setForeground(new java.awt.Color(0, 0, 0));
        lblAssess.setText("Assessment : ");
        pnlAssignStud.add(lblAssess, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        cboMinute.setBackground(new java.awt.Color(204, 204, 204));
        cboMinute.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        pnlAssignStud.add(cboMinute, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 345, 60, -1));

        cboHours.setBackground(new java.awt.Color(204, 204, 204));
        cboHours.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        cboHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHoursActionPerformed(evt);
            }
        });
        pnlAssignStud.add(cboHours, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 345, 60, -1));

        cboAssess.setBackground(new java.awt.Color(204, 204, 204));
        cboAssess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Internship", "Investigation Reports", "CP1", "CP2", "RMCP", "FYP" }));
        cboAssess.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        pnlAssignStud.add(cboAssess, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 230, -1));

        lblDuedate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDuedate.setForeground(new java.awt.Color(0, 0, 0));
        lblDuedate.setText("Dealine : ");
        pnlAssignStud.add(lblDuedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        dataC.setBackground(new java.awt.Color(255, 255, 255));
        dataC.setForeground(new java.awt.Color(0, 0, 0));
        dataC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dataCPropertyChange(evt);
            }
        });
        pnlAssignStud.add(dataC, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 345, 140, -1));

        lblHour.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblHour.setForeground(new java.awt.Color(0, 0, 0));
        lblHour.setText("Hour : ");
        pnlAssignStud.add(lblHour, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, -1, -1));

        lblMinute.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMinute.setForeground(new java.awt.Color(0, 0, 0));
        lblMinute.setText("Minute : ");
        pnlAssignStud.add(lblMinute, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        lblBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/system/img_icon/TransparentBox2.png"))); // NOI18N
        lblBox.setPreferredSize(new java.awt.Dimension(1074, 650));
        pnlAssignStud.add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlMainAssignStud.add(pnlAssignStud, "card2");

        add(pnlMainAssignStud, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        // Get the ID as an integer from the first column of the selected row
        //int id = (int) model.getValueAt(row, 0);

        // Set the text of txtId with the integer ID converted to a string
        txtKeyId.setText(model.getValueAt(row, 0).toString());
        txtName.setText(model.getValueAt(row, 1).toString());
        txtIntake.setText(model.getValueAt(row, 2).toString());

        if(txtSearch.getText()!=""){
            // Get the sorted row index in the model
            int sortedRowIndex = jTable1.convertRowIndexToModel(row);
            String idSort = model.getValueAt(sortedRowIndex, 0).toString();

            // Set the text of txtId with the integer ID converted to a string
            txtKeyId.setText(idSort);

            // Retrieve data from the model using the sorted row index
            txtName.setText(model.getValueAt(sortedRowIndex, 1).toString());
            txtIntake.setText(model.getValueAt(sortedRowIndex, 2).toString());


        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        txtSearch.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.LIGHT_GRAY)); // Add border
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); // Get the table model
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(model); // Create a new row sorter for the table model
        jTable1.setRowSorter(obj); // Set the row sorter for the table
        obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText())); // Apply a row filter based on the text in the search field
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        txtSearch.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE)); // Add border
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        Date dateC = dataC.getDate();
        KeyId = txtKeyId.getText();
        intakeCode = txtIntake.getText();
        name = txtName.getText();
        time = cboHours.getSelectedItem().toString() + ":" + cboMinute.getSelectedItem().toString();
        Assess = cboAssess.getSelectedItem().toString();
        supervisorName = "-";
        secondMName = "-";
        supervisorId = "-";
        secondMId = "-";
        dateL = "-";
        timeL = "-";
        submissionFile ="-";

        //boolean duplicateFound = false;
        boolean notCompletedForm = false;

        //Validation
        if (KeyId.isEmpty() || name.isEmpty() ||  dateC == null ||  intakeCode.isEmpty()) {
            notCompletedForm = true;
            JOptionPane.showMessageDialog(this, "Please complete the form");
        }

        date = DateFormat.getDateInstance().format(dateC); // Convert to string

        //!duplicateFound && 
        if (!notCompletedForm) {
            
              try {
                FileWriter writer = new FileWriter("assign_student_list.txt", true);
                writer.write(KeyId + "," + name + "," + intakeCode + "," + Assess + "," + date + "," 
                        + time + "," + supervisorName + "," + supervisorId +"," + secondMName + "," 
                        + secondMId + "," + dateL + "," + timeL + "," + submissionFile);
                writer.write(System.getProperty("line.separator"));

                writer.close();
                JOptionPane.showMessageDialog(null, "Assigned assessment successfully");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error assign student: " + e.getMessage(), 
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Error");
        }
        
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // Clear text fields
        txtKeyId.setText("");
        txtName.setText("");
        txtIntake.setText("");
        cboAssess.setSelectedIndex(-1);
        dataC.setDate(null);
        cboHours.setSelectedIndex(0);
        cboMinute.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtIntakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIntakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIntakeActionPerformed

    private void dataCPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dataCPropertyChange
        if ("date".equals(evt.getPropertyName())) {
            Date selectedDate = (Date) evt.getNewValue();
            if (selectedDate != null) {
                //SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                SimpleDateFormat dateF = new SimpleDateFormat("dd/MM/YY");
                String date = dateF.format(selectedDate);

            }
        }
    }//GEN-LAST:event_dataCPropertyChange

    private void cboHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboHoursActionPerformed

    // Method to set table header height
    private void setTableHeaderHeight(JTable table, int height) {
        JTableHeader header = table.getTableHeader();
        TableColumnModel columnModel = header.getColumnModel();
        for (int i = 0; i < columnModel.getColumnCount(); i++) {
            TableColumn column = columnModel.getColumn(i);
            column.setHeaderRenderer(new Design.HeaderRenderer(height));
            column.setPreferredWidth(130); // Set preferred column width
        }
        header.setPreferredSize(new Dimension(header.getWidth(), height));
    }

 
    private void loadData() {
        
        File file = new File("student_list.txt");
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = reader.readLine()) != null) {
                 String[] parts = line.split(",");
                if (parts.length == 12) {
                    
                    Student student = new Student(parts[0], parts[1], parts[2], parts[3], parts[4], parts[5], parts[6], parts[7], parts[8], parts[9], parts[10], parts[11]);
                    students.add(student);  // Add the student to the list
                }
                
               
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    } 

    
    private void populateTable() {
        model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);  // Clear existing rows
        for (Student student : students) {

            model.addRow(new Object[]{
                student.getKeyId(),
                student.getName(),
                student.getIntakeCode()
            });
            //model.addRow(student.toObjectArray());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnClear;
    private javax.swing.JComboBox<String> cboAssess;
    private javax.swing.JComboBox<String> cboHours;
    private javax.swing.JComboBox<String> cboMinute;
    private com.toedter.calendar.JDateChooser dataC;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAssess;
    private javax.swing.JLabel lblAssignInfo;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblDuedate;
    private javax.swing.JLabel lblHour;
    private javax.swing.JLabel lblIntake;
    private javax.swing.JLabel lblKeyId;
    private javax.swing.JLabel lblLAssignSTitle;
    private javax.swing.JLabel lblMinute;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSListTable;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel pnlAssignStud;
    private javax.swing.JLayeredPane pnlMainAssignStud;
    private javax.swing.JPanel pnlTableCourse;
    private javax.swing.JTextField txtIntake;
    private javax.swing.JTextField txtKeyId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
