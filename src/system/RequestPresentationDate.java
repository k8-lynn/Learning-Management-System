/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package system;

import Design.CurvedScrollBarUI;
import Design.CustomCellRenderer;
import Design.CustomHeaderRenderer;
import Design.CustomTableCellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author nisha
 */
public class RequestPresentationDate extends javax.swing.JPanel {

    /**
     * Creates new form StudentRegistrationList
     */
    DefaultTableModel model;
    public String id;
    public String name;
    LoginPage login = new LoginPage();
    String date;

    public RequestPresentationDate() {
        initComponents();
          // Set custom scroll bar UI for jScrollPane2
        jScrollPane3.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jScrollPane3.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        jScrollPane3.getVerticalScrollBar().setUI(new CurvedScrollBarUI());
        jScrollPane3.getHorizontalScrollBar().setUI(new CurvedScrollBarUI());


        // Set the row height and curve radius
        
        scheduleTable.getTableHeader().setDefaultRenderer(new CustomHeaderRenderer());
        scheduleTable.setDefaultRenderer(Object.class, new CustomCellRenderer());

        // Set the row height and curve radius
        scheduleTable.setRowHeight(20); // Set row height
        scheduleTable.setIntercellSpacing(new Dimension(0, 0)); // Remove cell spacing
        scheduleTable.setShowGrid(false); // Hide grid lines
        scheduleTable.setShowHorizontalLines(true);
       
        setTableHeaderHeight(scheduleTable, 30); // Set header height
     

 
        String input = login.getUsername();;
        String[] parts = input.split("-");
        if (parts.length > 1) {
            id = parts[1].trim();
            name = parts[0].trim();
        }
        
        populateBox();
        populateTable(id);
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainPresentation = new javax.swing.JLayeredPane();
        pnlPresentation = new javax.swing.JPanel();
        lblPresentationTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblSMName = new javax.swing.JLabel();
        lblSuperName = new javax.swing.JLabel();
        intakeLabel1 = new javax.swing.JLabel();
        txtSM = new javax.swing.JTextField();
        txtSuper = new javax.swing.JTextField();
        txtIntakeCode = new javax.swing.JTextField();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        dataC = new com.toedter.calendar.JDateChooser();
        lblAssessement = new javax.swing.JLabel();
        txtAssess = new javax.swing.JTextField();
        cboTime = new javax.swing.JComboBox<>();
        btnRequest = new javax.swing.JButton();
        lblStudPresentationSch = new javax.swing.JLabel();
        lblStudPresentationReq = new javax.swing.JLabel();
        lblBox = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1075, 650));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMainPresentation.setPreferredSize(new java.awt.Dimension(1075, 650));
        pnlMainPresentation.setLayout(new java.awt.CardLayout());

        pnlPresentation.setBackground(new java.awt.Color(255, 255, 255));
        pnlPresentation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPresentationTitle.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblPresentationTitle.setForeground(new java.awt.Color(0, 0, 0));
        lblPresentationTitle.setText("Request Presentation Date");
        pnlPresentation.add(lblPresentationTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 35, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setPreferredSize(new java.awt.Dimension(456, 210));

        scheduleTable.setBackground(new java.awt.Color(255, 255, 255));
        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Intake", "Assessment", "Present Date", "Time", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(scheduleTable);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 990, -1));

        pnlPresentation.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 1010, 230));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSMName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSMName.setForeground(new java.awt.Color(0, 0, 0));
        lblSMName.setText("Second Marker : ");
        jPanel1.add(lblSMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, -1, -1));

        lblSuperName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSuperName.setForeground(new java.awt.Color(0, 0, 0));
        lblSuperName.setText("Supervisor : ");
        jPanel1.add(lblSuperName, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, -1, -1));

        intakeLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        intakeLabel1.setForeground(new java.awt.Color(0, 0, 0));
        intakeLabel1.setText("Intake Code : ");
        jPanel1.add(intakeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        txtSM.setEditable(false);
        txtSM.setBackground(new java.awt.Color(221, 218, 218));
        txtSM.setEnabled(false);
        jPanel1.add(txtSM, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 105, 230, -1));

        txtSuper.setEditable(false);
        txtSuper.setBackground(new java.awt.Color(221, 218, 218));
        txtSuper.setEnabled(false);
        jPanel1.add(txtSuper, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 65, 230, -1));

        txtIntakeCode.setEditable(false);
        txtIntakeCode.setBackground(new java.awt.Color(221, 218, 218));
        txtIntakeCode.setEnabled(false);
        jPanel1.add(txtIntakeCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 35, 230, -1));

        lblTime.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTime.setForeground(new java.awt.Color(0, 0, 0));
        lblTime.setText("Time :");
        jPanel1.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate.setForeground(new java.awt.Color(0, 0, 0));
        lblDate.setText("Date : ");
        jPanel1.add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        dataC.setBackground(new java.awt.Color(255, 255, 255));
        dataC.setForeground(new java.awt.Color(0, 0, 0));
        dataC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dataCPropertyChange(evt);
            }
        });
        jPanel1.add(dataC, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 95, 230, -1));

        lblAssessement.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAssessement.setForeground(new java.awt.Color(0, 0, 0));
        lblAssessement.setText("Assessement Type : ");
        jPanel1.add(lblAssessement, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        txtAssess.setEditable(false);
        txtAssess.setBackground(new java.awt.Color(221, 218, 218));
        txtAssess.setEnabled(false);
        jPanel1.add(txtAssess, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 65, 230, -1));

        cboTime.setBackground(new java.awt.Color(204, 204, 204));
        cboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "0830-0900", "0900-0930", "0930-1000", "1000-1030", "1030-1100", "1100-1130", "1130-1200", "1200-1230", "1300-1330", "1330-1400", "1400-1430", "1430-1500", "1500-1530", "1530-1600", "1600-1630", "1630-1700" }));
        cboTime.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        cboTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimeActionPerformed(evt);
            }
        });
        jPanel1.add(cboTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 230, -1));

        pnlPresentation.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 1010, 230));

        btnRequest.setBackground(new java.awt.Color(0, 153, 255));
        btnRequest.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnRequest.setText("Request");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });
        pnlPresentation.add(btnRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 357, -1, -1));

        lblStudPresentationSch.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblStudPresentationSch.setForeground(new java.awt.Color(29, 62, 105));
        lblStudPresentationSch.setText("Requested Details & Status");
        pnlPresentation.add(lblStudPresentationSch, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        lblStudPresentationReq.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblStudPresentationReq.setForeground(new java.awt.Color(29, 62, 105));
        lblStudPresentationReq.setText("Request");
        pnlPresentation.add(lblStudPresentationReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        lblBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/system/img_icon/TransparentBox2.png"))); // NOI18N
        pnlPresentation.add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlMainPresentation.add(pnlPresentation, "card2");

        add(pnlMainPresentation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
//        Date dateC = new Date();
//        // Create a SimpleDateFormat instance with the desired format
//        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
//        // Format the date
//        String date = sdf.format(dateC);

        String KeyId = id;
        String Sname = name;
        String intakeCode = txtIntakeCode.getText();
        String Time = cboTime.getSelectedItem().toString();
        String Assess = txtAssess.getText();
        String status = "PENDING";



        //boolean duplicateFound = false;
        boolean notCompletedForm = false;

        //Validation
        if (Time.equals("Select")) {
            notCompletedForm = true;
            JOptionPane.showMessageDialog(this, "Please complete the form");
        }

        //!duplicateFound && 
        if (!notCompletedForm) {
            
              try {
                FileWriter writer = new FileWriter("presentation_list.txt", true);
                writer.write(KeyId + "," + Sname + "," + intakeCode + "," + Assess + "," + date + "," 
                        + Time + "," + status);
                writer.write(System.getProperty("line.separator"));

                writer.close();
                JOptionPane.showMessageDialog(null, "Request submitted successfully");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error : " + e.getMessage(), 
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Error");
        }
        
        populateTable(id);
        dataC.setDate(null);
        cboTime.setSelectedIndex(-1);

        
        
    }//GEN-LAST:event_btnRequestActionPerformed

    private void dataCPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dataCPropertyChange
        if ("date".equals(evt.getPropertyName())) {
            Date selectedDate = (Date) evt.getNewValue();
            if (selectedDate != null) {
                //SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                SimpleDateFormat dateF = new SimpleDateFormat("dd-MM-yyyy");
                date = dateF.format(selectedDate);

            }
        }
    }//GEN-LAST:event_dataCPropertyChange

    private void cboTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTimeActionPerformed

       // Method to set table header height
    private void setTableHeaderHeight(JTable table, int height) {
        JTableHeader header = table.getTableHeader();
        TableColumnModel columnModel = header.getColumnModel();
        for (int i = 0; i < columnModel.getColumnCount(); i++) {
            TableColumn column = columnModel.getColumn(i);
            column.setHeaderRenderer(new Design.HeaderRenderer(height));
            column.setPreferredWidth(150); // Set preferred column width
        }
        header.setPreferredSize(new Dimension(header.getWidth(), height));
    }
    
    private void populateTable(String id) {
        DefaultTableModel tableModel= (DefaultTableModel) scheduleTable.getModel();
        // Clear the table
        tableModel.setRowCount(0);

        // Read data from the file and filter by id
        String filePath = "presentation_list.txt";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length >= 6 && data[0].trim().equals(id)) {
                    // Add the filtered row to the table model
                    tableModel.addRow(new Object[]{data[0], data[1], data[2], data[3], data[4], data[5], data[6]});
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error reading file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void populateBox() {
        String filePath = "assign_student_list.txt"; 
        String currentId = id; 
        Set<String> uniqueIntakes1 = new HashSet<>(); 

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(","); 

                if (data.length >= 6) {
                    String id = data[0].trim();  

                    if (id.equalsIgnoreCase(currentId)) {                        
                    
                        txtIntakeCode.setText(data[2]);
                        txtAssess.setText(data[3]);
                        txtSuper.setText(data[7]);
                        txtSM.setText(data[9]);

                    }
                  
                } else {
                    System.err.println("Invalid data : " + line);
                }
            }
        }catch (IOException e) {
            e.printStackTrace();
        }
        
    }




     
  
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRequest;
    private javax.swing.JComboBox<String> cboTime;
    private com.toedter.calendar.JDateChooser dataC;
    private javax.swing.JLabel intakeLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAssessement;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblPresentationTitle;
    private javax.swing.JLabel lblSMName;
    private javax.swing.JLabel lblStudPresentationReq;
    private javax.swing.JLabel lblStudPresentationSch;
    private javax.swing.JLabel lblSuperName;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLayeredPane pnlMainPresentation;
    private javax.swing.JPanel pnlPresentation;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JTextField txtAssess;
    private javax.swing.JTextField txtIntakeCode;
    private javax.swing.JTextField txtSM;
    private javax.swing.JTextField txtSuper;
    // End of variables declaration//GEN-END:variables
}
